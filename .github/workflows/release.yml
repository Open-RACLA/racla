name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Build and Release on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        node-version: [22.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup PNPM
        uses: pnpm/action-setup@v3
        with:
          version: 10.9.0
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      # Windows에서 필요한 추가 종속성
      - name: Install Windows Build Tools (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          npm config set msvs_version 2019
        shell: pwsh

      # 환경 변수 설정
      - name: Setup environment variables
        run: node .github/workflows/env-setup.js

      - name: Build application
        run: pnpm build-prod

      # Windows 빌드
      - name: Build Windows Installer
        if: matrix.os == 'windows-latest'
        run: npx electron-builder --win --config electron-builder.config.js
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: |
            dist/electron/*.exe
            dist/electron/*.zip
            dist/electron/*.yml
            dist/electron/*.blockmap
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
